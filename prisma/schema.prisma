// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Product {
  id            String         @id
  shopId        String
  title         String
  vendor        String?
  productType   String?
  currentPrice  Float
  priceChanges  PriceChange[]
  rules         DiscountRule[] @relation("ProductRules")
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model DiscountRule {
  id          String     @id @default(cuid())
  name        String
  type        String     // "percentage" | "fixed" | "formula"
  value       String     // Stores percentage, fixed amount, or formula
  startDate   DateTime?
  endDate     DateTime?
  target      String     // "product" | "collection" | "vendor" | "productType"
  targetId    String?    // Specific ID for product/collection, or value for vendor/type
  isActive    Boolean    @default(true)
  products    Product[]  @relation("ProductRules")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model PriceChange {
  id          String   @id @default(cuid())
  productId   String
  product     Product  @relation(fields: [productId], references: [id])
  oldPrice    Float
  newPrice    Float
  ruleId      String?
  userId      String?
  createdAt   DateTime @default(now())
}
